<script type="text/javascript" charset="utf-8">
//<![CDATA[
// Including jQuery conditionnally.
if (typeof jQuery === 'undefined') {
    document.write({{ "http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js" | script_tag | json }});
  document.write('<script type="text/javascript">jQuery.noConflict();<\/script>');
}
//]]>
</script>

<script>
  console.log("this is the page-testing script") 
  
  $('.item-tip').popover({ 
    trigger: "hover",
    html: true
  });

  $('#myModal').modal({show:true})


  freeShip = 3000;
  //variables necessary for category functions
  last_step = '#step_1';
  last_step_header = '#stepH1';
  //variables for item + cart management
  currentCart = [];
  cartObject =[];
  toAdd = [];
  /************* on site load *************/
  //call getCart function and populate the cart area
  //add each item id to the currentCart array 

  /************* on item click *************/
  //add item to cart and call the getCart function
    //adjust function call to loop through and compare whether item is in cart array or not
    //if not, append to end of cart area
  /************* on item delete *************/

  //when an item is clicked, it is added to the currentCart array (stored in a session)
  // and calls the Shopify.addItem API function

  /*
   *
   *
   *
   *
    ******************* Shopify API functions section *******************
   *
   *
   *
   *
  */

  Shopify.addItem = function(variant_id, quantity, callback) {
    var quantity = quantity || 1;
    var params = {
      type: 'POST',
      url: '/cart/add.js',
      data: 'quantity=' + quantity + '&id=' + variant_id,
      dataType: 'json',
      success: function(line_item) { 
        if ((typeof callback) === 'function') {
          callback(line_item);
        }

      },
      error: function(XMLHttpRequest, textStatus) {
        Shopify.onError(XMLHttpRequest, textStatus);
      }
    };
    jQuery.ajax(params);
  }; 

  Shopify.getCart = function(callback) {
    jQuery.getJSON('/cart.js', function (cart, textStatus) {
      if ((typeof callback) === 'function') {
        callback(cart);
      }


    });
  };

  Shopify.changeItem = function(variant_id, quantity, callback) {
    var params = {
      type: 'POST',
      url: '/cart/change.js',
      data:  'quantity='+quantity+'&id='+variant_id,
      dataType: 'json',
      success: function(cart) { 
        if ((typeof callback) === 'function') {
          callback(cart);
        }
      },
      error: function(XMLHttpRequest, textStatus) {
        Shopify.onError(XMLHttpRequest, textStatus);
      }
      };
      jQuery.ajax(params);
  };

  // ---------------------------------------------------------
  // POST to cart/change.js returns the cart in JSON.
  // ---------------------------------------------------------
  Shopify.removeItem = function(variant_id, callback) {
    var params = {
      type: 'POST',
      url: '/cart/change.js',
      data:  'quantity=0&id='+variant_id,
      dataType: 'json',
      success: function(cart) { 
        if ((typeof callback) === 'function') {
          callback(cart);
        }
        
      },
      error: function(XMLHttpRequest, textStatus) {
        Shopify.onError(XMLHttpRequest, textStatus);
      }
    };
    jQuery.ajax(params);
  };

  // ---------------------------------------------------------
  // POST to cart/clear.js returns the cart in JSON.
  // It removes all the items in the cart, but does
  // not clear the cart attributes nor the cart note.
  // ---------------------------------------------------------
  Shopify.clear = function(callback) {
    var params = {
      type: 'POST',
      url: '/cart/clear.js',
      data:  '',
      dataType: 'json',
      success: function(cart) { 
        if ((typeof callback) === 'function') {
          callback(cart);
        }
        
      },
      error: function(XMLHttpRequest, textStatus) {
        Shopify.onError(XMLHttpRequest, textStatus);
      }
    };
    jQuery.ajax(params);
  };

  /*
   *
   *
   *
   *
    ******************* cart specific functionality section *******************
   *
   *
   *
   *
  */

  //cartDisplay() is called at load time to pre-populate the cart
  //var load lets cart know whether new item or loading whole cart
  $('.item').click(function(event) {    
    event.preventDefault();

    iVariant = $(this).data("var");
    Shopify.addItem(iVariant,1,function(){console.log("item added")});
    
    setTimeout(cartDisplay,500);
  }); //end item click()
  
  function cartDisplay() {
      $(".cartList").html("");

      Shopify.getCart( function(c) {
        //update cart total cost
        $("#cartTot").html("");
        cartPrice = c.total_price;
        cartPrice = priceFormat(cartPrice);
        $("#cartTot").html(cartPrice);
        for(i=0;i<c.items.length;i++) {
          
          //variables for title and currentCart array
          crtItmTitle = c.items[i].title;
          currentCart[i] = c.items[i].id;
          linePrice = c.items[i].line_price;
          linePrice = priceFormat(linePrice);
          itemTemp = "#"+c.items[i].id;

          //adjust length of title
          if (crtItmTitle.length > 27) {
            crtItmTitle = crtItmTitle.substr(0,24) + '...';     
          }

          $(".cartList").append(
          "<div class='cartItem' style='display: none;' id="+c.items[i].id+">"+
          "<span class='cRemove fa fa-trash-o' id=remove"+c.items[i].id+" data-index="+c.items[i].id+"></span>"+
          "<span class='cQty cDiv' id='cQty"+c.items[i].id+"'>"+c.items[i].quantity+"</span><span class='fa fa-times cTimes'></span>"+
          "<div class='cTitle cDiv'>"+crtItmTitle+"</div>"+
          "<div class='cPrice cDiv'id='cPrice"+c.items[i].id+"'>"+linePrice+"</div>"+
          "</div>");

          $(itemTemp).show("slow");
          cartObject.push(c.items[i]);
        }
      }) //end Shopify.getCart()
  } //end cartDisplay function()
  cartDisplay();

  function priceFormat(value) {
    val = (value / 100).toFixed(2);
    val = "$"+val;
    return val;
  }
  
  $(document).on("click", ".cRemove", function() {
    index = $(this).attr("data-index");
    console.log(index);
    item = "#"+index;
    
    //remove item from cart
    Shopify.removeItem(index);
    //adjust cost
    //remove from currentCart array
    for(i=0;i<currentCart.length;i++) {
      console.log("index: "+index+" and the currentCart: " + currentCart[i])
      if(index == currentCart[i]) {
        console.log("index: "+index+" matches currentCart: " + currentCart[i])
        currentCart.splice(i,1);
      }
    }
    //remove item from cartList
    $(this).parent().remove();
  }); // cRemove click()


  $('.category').click(function() {

    clicked_step = "#step_"+$(this).data("id");
    clicked_stepH = "#stepH"+$(this).data("id");
    stepHtml = $(this).html();
    var name = $(this).data("name");
    $("#step_name").html("Selecting: "+name);


    if($(document).width() <= 900) {
     $(".categoryList").css("height","50px");
     $(".categoryList").css("overflow-y","hidden");
    }



    if(clicked_step !== last_step) {  //clicked on a new step, hide old step
       $(last_step).toggleClass("present");
       temp = clicked_step;
       last_step = temp;
       $(last_step).toggleClass("present");
     }

    if(clicked_stepH !== last_step_header) {  //clicked on a new step, hide old step
       $(last_step_header).toggleClass("current_step");
       tempH = clicked_stepH;
       last_step_header = tempH;
       $(last_step_header).toggleClass("current_step");
     }
  }) //end category click()

  $("#submit-modal").click(function(e) {
    e.preventDefault();
    //loop through cart object for still existing items?
    cartHtml = $(".cartList").html();
    $("#cartModalBody").html("");
    /*
    for(i=0;i<c.items.length;i++) {

          //variables for title and currentCart array
          crtItmTitle = c.items[i].title;
          currentCart[i] = c.items[i].id;
          linePrice = c.items[i].line_price;
          linePrice = priceFormat(linePrice);
          itemTemp = "#"+c.items[i].id;

          //adjust length of title
          if (crtItmTitle.length > 27) {
            crtItmTitle = crtItmTitle.substr(0,24) + '...';     
          }

          $(".cartList").append(
            "<div class='cartItem' style='display: none;' id="+c.items[i].id+">"+
            "<span class='cRemove fa fa-trash-o' id=remove"+c.items[i].id+" data-index="+c.items[i].id+"></span>"+
            "<span class='cQty cDiv' id='cQty"+c.items[i].id+"'>"+c.items[i].quantity+"</span><span class='fa fa-times cTimes'></span>"+
            "<div class='cTitle cDiv'>"+crtItmTitle+"</div>"+
            "<div class='cPrice cDiv'id='cPrice"+c.items[i].id+"'>"+linePrice+"</div>"+
            "</div>");

          $(itemTemp).show("slow");
          cartObject.push(c.items[i]);
        }
    */
    //use above code to replace this for loop using this syntax
    for(i=0; i < currentCart.length; i++){
      if(currentCart[i] !== "") {
        tempPrice = priceFormat(currentCart[i].subPrice);
        $("#cartModalBody").append(
        "<div class='cMItem'>"+
        "<img class='cDiv cThumb' src='"+currentCart[i].picture+"' />"+
        "<span class='cDiv'>"+currentCart[i].qty+"</span><span class='fa fa-times cTimes'></span>"+
        "<div class='cDiv'>"+currentCart[i].title+"</div>"+
        "<div class='cDiv cPrice'>"+
        tempPrice+"</div>"+
        "</div>"); 
      }
    }
    
    $('#cartModal').modal('show');
  });
  //inject items into #cartModal
  //adjust cart-items to avoid float-left issue
  $('#cartModal').on('show', function () {
       $(this).find('.modal-body').css({
              width:'auto', //probably not needed
              height:'auto', //probably not needed 
              'max-height':'100%'
       });
  });

  $("#checkout").click(function(e) {
    //this adds the box selected to the cart
    e.preventDefault();

    function moveAlong(){
      if (toAdd.length) {
        var request = toAdd.shift();
        var tempId= request.variant_id;
        var tempQty = request.quantity_id;
        var params = {
          type: 'POST',
          url: '/cart/add.js',
          data: 'quantity='+tempQty+'&id='+tempId,
          dataType: 'json',
          success: function(line_item) { 
            console.log("success!");
            moveAlong();

          },
          error: function() {
            console.log("fail");
            moveAlong();

          }
        };
        $.ajax(params);
      }
      else {        
        document.location.href = '/checkout';
      }  
    }; // end moveAlong()
    
    //if statement for what allows an individual to load to cart
    // focus on subTotal being greater then $15411
    moveAlong();
  }); //end submit-table
  

</script>


















